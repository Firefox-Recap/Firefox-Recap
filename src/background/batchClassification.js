/**
 * @file batchClassification.js
 * @description Automates classification and storage of locked domains using DOMAIN_LOCKS.
 * Ensures each domain is persistently stored across SQLite, IndexedDB, embeddings, and CSV.
 */

import { DOMAIN_LOCKS } from "../storage/domainLocks.js"; // âœ… Static source of truth
import { saveFinalBatch } from "../storage/StorageManager.js";

/**
 * ðŸš€ Main batch classification function (LOCKED DOMAINS ONLY)
 */
export async function batchClassifySites() {
  console.log(`ðŸš€ Starting batch classification for locked domains...`);

  //await loadModel(); // âœ… Load AI model once

  for (const domain in DOMAIN_LOCKS) {
    const category = DOMAIN_LOCKS[domain];
    console.log(`ðŸ”’ Lock: ${domain} â†’ ${category}`);

    await saveFinalBatch(domain, category); // âœ… StorageManager handles everything
  }

  console.log("âœ… All locked domains classified and persisted!");
}

// ðŸš€ Auto-run batch classification when script loads
batchClassifySites();
